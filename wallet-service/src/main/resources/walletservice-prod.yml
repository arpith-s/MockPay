server:
  port: 6060
  servlet:
    context-path: /wallet-service

spring:
  datasource:
    url: jdbc:mysql://${MYSQL_DB_HOST}:${MYSQL_DB_PORT}/${MYSQL_DB_NAME}?createDatabaseIfNotExist=true&sslmode=require
    username: ${MYSQL_DB_USER}
    password: ${MYSQL_DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        jdbc:
          time_zone: UTC
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVER}
    properties:
      security:
        protocol: SASL_SSL
      sasl:
        jaas:
          config: org.apache.kafka.common.security.plain.PlainLoginModule required username='${KAFKA_KEY}' password='${KAFKA_SECRET}';
        mechanism: PLAIN
      session:
        timeout:
          ms: 45000
    producer:
      client-id: wallet_service_producer
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      client-id: wallet_service_consumer
      group-id: wallet_service_group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

logging:
  level:
    root: info

redis:
  host:
    url: ${REDIS_HOST_URL}
    port: ${REDIS_HOST_PORT}
  auth:
    secret: ${REDIS_HOST_SECRET}
  expire-time: 600

application:
  wallet:
    smallest-denomination-factor: 100
    currency-type: INR
    start-balance: 10000
  identity-service:
    url: ${IDENTITY_SERVICE_HOST}
    block-timeout: 30
  security:
    service:
      user-name: ${SERVICE_USER_NAME}
      email: ${SERVICE_USER_EMAIL}
      secret: ${SERVICE_USER_SECRET}